#!/bin/bash
#
# bandit_common - BANDIT common functions
#
# Copyright (C) 2015-2018 Angel Linares Zapater
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2, as 
# published by the Free Software Foundation. See the COPYING file.
#
# This program is distributed WITHOUT ANY WARRANTY; without even the 
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
#

###------------------------------
# BANDIT paths helpers
###------------------------------

bandit_path_get_catalog()
{
    local _retval=$1
    
    eval "$_retval"=$(basename $(dirname $(dirname $(dirname $2))))
}

bandit_path_get_bundle()
{
    local _retval=$1
    local b
    
    b=$(basename $(dirname $2))
    b=${b/.dir/}
    
    eval "$_retval"=$b
}

bandit_path_get_package()
{
    local _retval=$1
    local p
    
    p=$(basename $2)
    p=${p/.sh/}
    
    eval "$_retval"=$p
}

###------------------------------
# Directory helpers
###------------------------------

bandit_mkdir()
{
    [ -d $1 ] || mkdir -p $1
}

bandit_pushd()
{
    pushd $1 > /dev/null 
}

bandit_popd()
{
    popd > /dev/null 
}

###------------------------------
# File helpers
###------------------------------

bandit_backup()
{
    local file=$1
    
    if [ -r $file ]; then
	cp $file $file-${BANDIT_STAMP}
    fi
}

bandit_md5sum()
{
    local value=""
    local expected=""

    value=$(md5sum $1 | awk '{print $1}')
    [ -r "$1.md5" ] && expected=$(cat $1.md5 | awk '{print $1}')

    if [ "$value" != "$expected" ]; then 
	bandit_msg "Checksum error for package $1" red
	return 1
    fi
    return 0
}
export -f bandit_md5sum

# Finds whether a command $1 in installed the local system
bandit_system_has()
{
    which ${1} 2>&1 >/dev/null
    return $?
}
export -f bandit_system_has

###------------------------------
# Script helpers
###------------------------------

# Exit after printing a message $1 in some color $2
bandit_exit()
{
    bandit_msg "$1" "${2:-red}"
    exit 0
}

# Finds a function $2 in a script shell $1
bandit_script_has()
{  
    if [ -z $(grep "$2()" "$1") ]; then 
	return 1
    else
	return 0
    fi
}

###------------------------------
# Users and group helpers
###------------------------------

bandit_groups_get_max()
{
    local top=99999
    if [ "$1" == "system" ]; then top=998; fi
    
    echo $(awk -v max=0 -v top=$top '\
      BEGIN { FS=":" } 
      { 
        if ($3>top) { next }
        if ($3>max) { max=$3 } 
      }
      END { print max }  
      ' /etc/group )
}

bandit_group_add()
{
    local name=$1
    local type=$2
    
    # Get next user id
    local id=$(( $(bandit_groups_get_max $type)+1 ))

    # Add the group
    groupadd -g $id $name
    
    # Reorder /etc/group
    grpck -s
}

bandit_group_delete()
{
    local name=$1
    
    # Delete the group
    groupdel $name
}

bandit_users_get_max()
{
    local top=99999
    if [ "$1" == "system" ]; then top=998; fi
    
    echo $(awk -v max=0 -v top=$top '\
      BEGIN { FS=":" } 
      { 
        if ($3>top) { next }
        if ($3>max) { max=$3 } 
      }
      END { print max }  
      ' /etc/passwd )
}

bandit_user_add()
{
    local name=$1
    local type=$2
    local group=$3
    local desc=$4
    local home=$5
    local shell=$6
    
    # Get next user id
    local id=$(( $(bandit_users_get_max $type)+1 ))

    # Add the user
    useradd -u $id \
            -g $group \
            -c "$desc" \
            -d "$home" \
            -s "$shell" \
	    $name
    
    # Reorder /etc/passwd
    pwck -s
}

bandit_user_delete()
{
    local name=$1
    
    # Delete the user
    userdel $name
}

###------------------------------
# Other helpers
###------------------------------

# Set a random string of length $2 (or 30 if not set) in variable $1
bandit_random_string()
{  
    local _retval=$1
    local length=$2
    
    eval "$_retval"=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w ${length:-30} | head -n 1)
}
export -f bandit_random_string

# Get new unique timestamp 
bandit_timestamp()
{
    local _retval=$1

    local d=$(date +%Y%m%d-%H%M%S.%N)

    eval "$_retval"=${d:2:16}
}
export -f bandit_timestamp

###------------------------------
# Log and messages helpers
###------------------------------

## Terminal colors
BLUE="\\033[1;34m"
CYAN="\\033[1;36m"
GREEN="\\033[1;32m"
GREY="\\033[0;39m"
RED="\\033[1;31m"
YELLOW="\\033[1;33m"

bandit_log()
{
    echo
    echo "--------------------"
    echo "$1"
    echo "---"
}
export -f bandit_log

bandit_msg()
{
    local color=""
    local seq=""

    [ $# == 2 ] && color=$2
    
    case $color in
	blue)   seq=$BLUE ;;
	cyan)   seq=$CYAN ;;
	green)  seq=$GREEN ;;
	grey)   seq=$GREY ;;
	red)    seq=$RED ;;
	yellow) seq=$YELLOW ;;
    esac     

    local line=$seq"$1"
    [ -n "$color" ] && line=$line$GREY

    echo -e $line
}
export -f bandit_msg
