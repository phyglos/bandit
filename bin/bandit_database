#!/bin/bash
#
# bandit_database - BANDIT database functions
#
# Copyright (C) 2016-2017 Angel Linares Zapater
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2, as 
# published by the Free Software Foundation. See the COPYING file.
#
# This program is distributed WITHOUT ANY WARRANTY; without even the 
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
#

###------------------------------
# Catalog database 
###------------------------------

# Get available catalogs
bandit_db_get_catalogs_available()
{
  local retvar=$1
  local expr=$2
  local list=""

  if [ -d $BANDIT_HOME/etc/catalogs ]; then
      list=$(find $BANDIT_HOME/etc/catalogs -name "${expr}*.conf" | sed "s/.conf//" | sort)
  fi

  eval $retvar="'$list'"
}

# Get installed catalogs
bandit_db_get_catalogs_installed()
{
  local retvar=$1
  local prefix=$2
  local list=""

  if [ -d $BANDIT_CATALOGS ]; then
      list=$(find $BANDIT_CATALOGS/* -maxdepth 0 -type d -name "${prefix}*" )
  fi
  
  eval $retvar="'$list'"
}

###------------------------------
# Bundles database 
###------------------------------

# Get available bundles 
bandit_db_get_bundles_available()
{
  local retvar=$1
  local prefix=$2
  local list=""

  if [ -d $BANDIT_CATALOGS ]; then 
      list=$(find $BANDIT_CATALOGS/**/bundles -name *${prefix}*.desc | sort)
  fi

  eval $retvar="'$list'"
}


###------------------------------
# Items database 
###------------------------------

# Get available bundles 
bandit_db_get_bundle_items_available()
{
  local retvar=$1
  local expr=$2
  local list=""

  if [ -d $BANDIT_CATALOGS ]; then 
      list=$(find $BANDIT_CATALOGS/**/bundles/*.dir/* -name "${expr}*" )
  fi
  
  eval $retvar="'$list'"
}


###------------------------------
# Packages database 
###------------------------------

# Get available packages in downloaded bundles
bandit_db_get_packages_available()
{
  local retvar=$1
  local prefix=$2
  local list=""

  if [ -d $BANDIT_HOME/etc/bundles ]; then 
      list=$(find $BANDIT_HOME/etc/bundles -name ${prefix}.sh)
  fi

  eval $retvar="'$list'"
}

# Get packages installed with bandit
bandit_db_get_packages_installed()
{
  local retvar=$1
  local prefix=$2
  local list=""

  if [ -r /var/log/porg ]; then 
      local list=$(find /var/log/porg -name ${prefix})
  fi
  
  eval $retvar="'$list'"
}

# Get porg files for an installed package
bandit_db_get_package_files()
{
    porg -f $1
}

# Get porg info for an installed package
bandit_db_get_package_info()
{
    porg -i $1
}


###------------------------------
# Files database 
###------------------------------

# Get installed files 
bandit_db_get_files_installed()
{
  local retvar=$1
  local prefix=$2

  local list=$(grep -R ${prefix} /var/log/porg | 
      sed -e "/#/d" -e "s/[:|]/ /g" | 
      awk '{
            package=$1
            file=$2
            print file"|"package
           }' |
      sort
      ) 

  eval $retvar="'$list'"
}

###------------------------------
# Cache database 
###------------------------------

# Get cached sources
bandit_db_get_cache_sources()
{
  local retvar=$1
  local prefix=$2
  local list=""

  if [ -d $BANDIT_XSOURCES ]; then 
      list=$(find $BANDIT_XSOURCES -name "*${prefix}*" | sort -d)
  fi

  eval $retvar="'$list'"
}

# Get cached builds
bandit_db_get_cache_builds()
{
  local retvar=$1
  local prefix=$2
  local list=""

  if [ -d $BANDIT_XBUILDS ]; then 
      list=$(find $BANDIT_XBUILDS -name "*${prefix}*" | sort -d)
  fi
  
  eval $retvar="'$list'"
}


###------------------------------
# Logs database 
###------------------------------

# Get log entries
bandit_db_get_log_entries()
{
  local retvar=$1
  local prefix=$2
  local list=""

  if [ -d $BANDIT_LOGS ]; then 
      list=$(find $BANDIT_LOGS -type f -name "*${prefix}*" | 
	      sed -e "s#${BANDIT_LOGS}/bundles/##g" -e "s/.log$//g" | 
              awk -F '/' '{
                           match($1, /[0-9]+-[0-9]+.[0-9]+/)
                           timestamp=substr($1, RSTART, RLENGTH)
                           bundle=substr($1, 1, RSTART-2)
                           print timestamp"|"bundle"|"$2
                          }' |
              sort -d)
  fi
  
  eval $retvar="'$list'"
}


