#!/bin/bash
#
# bandit_search - functions for BANDIT searches
#
# Copyright (C) 2016-2017 Angel Linares Zapater
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2, as 
# published by the Free Software Foundation. See the COPYING file.
#
# This program is distributed WITHOUT ANY WARRANTY; without even the 
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
#

bandit_search()
{
    local expr=$1
    local options=$2

    local catalogs
    local bundles
    local files
    local items
    local lines
    local name
    local words

    if [ "$expr" == "all" -o "$expr" == "" ]; then expr='[a-z]'; fi

    #---
    # Search repositories
    #---
    if [[ $options =~ "r" ]]; then

	bandit_db_get_repositories_configured repositories ${expr}
	if [ -n "$repositories" ]; then 
	    echo "Repositories (configured):"
	    for repository in ${repositories[*]}
	    do
		echo "  "[$(basename $repository)] 
	    done
	fi

    	bandit_db_get_repositories_installed repositories ${expr}
	if [ -n "$repositories" ]; then 
	    echo "Repositories (installed):"
	    for repository in ${repositories[*]}
	    do
		echo "  "[$(basename $repository)] 
	    done
	fi
	
	bandit_db_get_repositories_enabled repositories
	if [ -n "$repositories" ]; then 
	    echo "Repositories (enabled):"
	    for repository in ${repositories[*]}
	    do
		echo "  "[$(basename $repository)] 
	    done
	fi
    fi
    
    #---
    # Search catalogs
    #---
    if [[ $options =~ "c" ]] && [[ ! $expr =~ "/" ]]; then

	bandit_db_get_catalogs_configured catalogs ${expr}
	if [ -n "$catalogs" ]; then 
	    echo "Catalogs (configured):"
	    for catalog in ${catalogs[*]}
	    do
		echo "  "[$(basename $catalog)] 
	    done
	fi

    	bandit_db_get_catalogs_installed catalogs ${expr}
	if [ -n "$catalogs" ]; then 
	    echo "Catalogs (installed):"
	    for catalog in ${catalogs[*]}
	    do
		echo "  "[$(basename $catalog)] 
	    done
	fi
	
	bandit_db_get_catalogs_enabled catalogs
	if [ -n "$catalogs" ]; then 
	    echo "Catalogs (enabled):"
	    for catalog in ${catalogs[*]}
	    do
		echo "  "[$(basename $catalog)] 
	    done
	fi
    fi
    
    #---
    # Search bundles
    #---
    if [[ $options =~ "b" ]] && [[ ! $expr =~ "/" ]]; then 
	bandit_db_get_bundles_available bundles ${expr}
	if [ -n "$bundles" ]; then 
	    echo "Bundles (available):"
	    for bundle in ${bundles[*]}
	    do
		catalog=${bundle/$BANDIT_CATALOGS\//}
		catalog=${catalog/\/bundles\/*.desc/}
		name=$(basename $bundle)
		echo "  "[${catalog}] ${name/\.desc/}
	    done
	fi
    fi
    
    #---
    # Search items
    #---
    if [[ $options =~ "i" ]] && [[ ! $expr =~ "/" ]]; then
	bandit_db_get_bundle_items_available items ${expr}
	if [ -n "$items" ]; then 
	    echo "Bundle items (available):"
	    lines=(${items})
	    for line in ${lines[*]}
	    do
	    	bundle=${line/$BANDIT_CATALOGS\//}
		bundle=${bundle/\/bundles/}
		bundle=${bundle/\.dir*/}
		name=$(basename $line)
		echo "  "[${bundle}] ${name/.sh/}
	    done
	fi
    fi
    
    #---
    # Search cache
    #---
    if [[ $options =~ "x" ]] && [[ ! $expr =~ "/" ]]; then
	bandit_db_get_cache_sources files ${expr}
	if [ -n "$files" ]; then 
	    echo "Sources in cache:"
	    for line in $files
	    do
		if [ -d ${line} ]; then continue; fi 
		if [[ "${line}" =~ \.md5$ ]]; then continue; fi 
		echo "  "$(basename ${line})
	    done
	fi
	bandit_db_get_cache_builds files ${expr}
	if [ -n "$files" ]; then 
	    echo "Builds in cache:"
	    for line in ${files}
	    do
		if [ -d ${line} ]; then continue; fi 
		if [[ "${line}" =~ \.md5$ ]]; then continue; fi 
		echo "  "$(basename ${line})
	    done
	fi
    fi
    
    #---
    # Installed files
    #---
    if [[ $options =~ "f" ]]; then 
	bandit_db_get_files_installed files ${expr}
	if [ -n "$files" ]; then 
	    echo "Files (installed):"
	    lines=(${files})
	    for line in ${lines[*]}
	    do
		OLD=$IFS IFS="|" words=(${line[*]}) IFS=$OLD 
		echo "  "${words[0]}" ("$(basename ${words[1]})")"
	    done
	fi
    fi

    #---
    # Search logs
    #---
    if [[ $options =~ "l" ]] && [[ ! $expr =~ "/" ]]; then
	bandit_db_get_log_entries logs ${expr}
	if [ -n "$logs" ]; then 
	    echo "Log entries:"
	    for line in $logs
	    do
		OLD=$IFS IFS="|" words=(${line[*]}) IFS=$OLD 
		echo ${words[0]}: [${words[1]/.sh/}] ${words[2]}  
	    done
	fi
    fi
}

