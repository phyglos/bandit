#!/bin/bash
#
# bandit_system_target - functions for BANDIT target systems
#
# Copyright (C) 2019 Angel Linares Zapater
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2, as 
# published by the Free Software Foundation. See the COPYING file.
#
# This program is distributed WITHOUT ANY WARRANTY; without even the 
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
#

###------------------------------
# system_target_command functions
###------------------------------

bandit_system_target_enter()
{
    local mounted
    
    if [ $BANDIT_TARGET_TYPE == "partition" ]; then
        mounted="$(grep $BANDIT_HOST_TGT_MNT /etc/mtab)"
        if [ -z "$mounted" ]; then
            mount -v $BANDIT_TARGET_PART $BANDIT_HOST_TGT_MNT
        fi
    fi
    
    grep -q $BANDIT_HOST_TGT_MNT/dev     /proc/mounts || mount --bind /dev      $BANDIT_HOST_TGT_MNT/dev
    grep -q $BANDIT_HOST_TGT_MNT/dev/pts /proc/mounts || mount -t devpts devpts $BANDIT_HOST_TGT_MNT/dev/pts -o gid=5,mode=620
    grep -q $BANDIT_HOST_TGT_MNT/proc    /proc/mounts || mount -t proc   proc   $BANDIT_HOST_TGT_MNT/proc
    grep -q $BANDIT_HOST_TGT_MNT/sys     /proc/mounts || mount -t sysfs  sysfs  $BANDIT_HOST_TGT_MNT/sys
    grep -q $BANDIT_HOST_TGT_MNT/run     /proc/mounts || mount -t tmpfs  tmpfs  $BANDIT_HOST_TGT_MNT/run

    chroot $BANDIT_HOST_TGT_MNT /usr/bin/env -i \
           HOME=/root \
           TERM=$TERM \
           PS1='\u@\h:[TARGET]:\w\\$ ' \
           BANDIT_HOME=$BANDIT_HOME \
           PATH=/bin:/usr/bin:/sbin:/usr/sbin:$BANDIT_HOME/bin \
           /bin/bash --login +h

    # Lazy unmount /dev and /proc because they could be locked
    # by any service started while inside TARGET
    umount $BANDIT_HOST_TGT_MNT/dev/pts 
    umount -l $BANDIT_HOST_TGT_MNT/dev
    umount $BANDIT_HOST_TGT_MNT/run
    umount $BANDIT_HOST_TGT_MNT/sys
    umount -l $BANDIT_HOST_TGT_MNT/proc

    if [ $BANDIT_TARGET_TYPE == "partition" ]; then
        if [ -z "$mounted" ]; then
            umount -v $BANDIT_HOST_TGT_MNT
        fi
    fi
}

bandit_system_target_init()
{
    # Install BANDIT, from HOST to TARGET
    bandit_log "Installing BANDIT in the TARGET system..." 

    bandit_msg "Copying BANDIT in the TARGET filesystem..."

    bandit_mkdir $BANDIT_HOST_TGT_MNT$BANDIT_HOME
    # Copy BANDIT regular files and links
    find $BANDIT_HOME -maxdepth 1 -type f -exec cp {} $BANDIT_HOST_TGT_MNT$BANDIT_HOME/ \;
    find $BANDIT_HOME -maxdepth 1 -type l -exec cp {} $BANDIT_HOST_TGT_MNT$BANDIT_HOME/ \;
    # Copy BANDIT directories
    cp -R $BANDIT_HOME/{bin,etc,lib} $BANDIT_HOST_TGT_MNT$BANDIT_HOME
    # Only create the log directories structure with no actual HOST content
    bandit_mkdir $BANDIT_HOST_TGT_MNT$BANDIT_LOGS/repositories
    bandit_mkdir $BANDIT_HOST_TGT_MNT$BANDIT_LOGS/catalogs
    bandit_mkdir $BANDIT_HOST_TGT_MNT$BANDIT_LOGS/bundles

    bandit_msg "Copying HOST repositories in the TARGET filesystem..."
    bandit_mkdir $BANDIT_HOST_TGT_MNT$BANDIT_REPOSITORIES
    for repo in $BANDIT_REPOSITORIES/*; do
        if [ "$(basename $repo)" == "localhost" ]; then
            if [ $BANDIT_TARGET_COPY_LOCALHOST == "no" ]; then
                # Copy a new local repository from lib/templates
                cp -R $BANDIT_HOME/lib/templates/repositories/localhost $BANDIT_HOST_TGT_MNT$BANDIT_REPOSITORIES
                continue
            fi
        fi
        # Copy the repository from HOST to TARGET
        cp -R ${repo} $BANDIT_HOST_TGT_MNT$BANDIT_REPOSITORIES
    done

    bandit_msg "Copying HOST catalogs in the TARGET filesystem..."
    bandit_mkdir $BANDIT_HOST_TGT_MNT$BANDIT_CATALOGS
    for cat in $BANDIT_CATALOGS/*; do
        if [ "$(basename $cat)" == "localhost" ]; then
            if [ $BANDIT_TARGET_COPY_LOCALHOST == "no" ]; then
                # Copy a new local catalog from lib/templates
                cp -R $BANDIT_HOME/lib/templates/catalogs/localhost $BANDIT_HOST_TGT_MNT$BANDIT_CATALOGS
                continue
            fi
        fi
        # Copy the catalog from HOST to TARGET
        cp -R ${cat} $BANDIT_HOST_TGT_MNT$BANDIT_CATALOGS
    done

    bandit_msg "Copying HOST caches in the TARGET filesystem..."

    bandit_mkdir $BANDIT_HOST_TGT_MNT$BANDIT_XREPOSITORIES
    cp -R $BANDIT_XREPOSITORIES/* $BANDIT_HOST_TGT_MNT$BANDIT_XREPOSITORIES
    bandit_mkdir $BANDIT_HOST_TGT_MNT$BANDIT_XCATALOGS
    cp -R $BANDIT_XCATALOGS/* $BANDIT_HOST_TGT_MNT$BANDIT_XCATALOGS

    bandit_mkdir $BANDIT_HOST_TGT_MNT$BANDIT_XSOURCES
    cp -R $BANDIT_XSOURCES/* $BANDIT_HOST_TGT_MNT$BANDIT_XSOURCES

    # Do not copy HOST build packs into the TARGET filesystem
    bandit_mkdir $BANDIT_HOST_TGT_MNT$BANDIT_XBUILDS
    # cp -R $BANDIT_XBUILDS/* $BANDIT_HOST_TGT_MNT$BANDIT_XBUILDS

    ###----------------------------------------
    # Layout TARGET filesystem
    ###----------------------------------------

    bandit_log "Preparing TARGET root filesystem..."

    # Change ownership to root
    chown -R root:root $BANDIT_HOST_TGT_MNT/$BANDIT_HOME
    chown -R root:root $BANDIT_HOST_TGT_MNT/$BANDIT_LOGS
    chown -R root:root $BANDIT_HOST_TGT_MNT/$BANDIT_XBUILDS
    chown -R root:root $BANDIT_HOST_TGT_MNT/$BANDIT_BUILDER_DIR

    ## Create filesystem layout

    # root
    mkdir -pv $BANDIT_HOST_TGT_MNT/{bin,boot,dev,etc/{opt,sysconfig},home}
    mkdir -pv $BANDIT_HOST_TGT_MNT/{media/{floppy,cdrom,usb},mnt}
    mkdir -pv $BANDIT_HOST_TGT_MNT/{proc,sys,run}
    mkdir -pv $BANDIT_HOST_TGT_MNT/{sbin,srv,var}
    install -dv -m 0750 $BANDIT_HOST_TGT_MNT/root
    install -dv -m 1777 $BANDIT_HOST_TGT_MNT/tmp $BANDIT_HOST_TGT_MNT/var/tmp

    # special devices
    mknod -m 600 $BANDIT_HOST_TGT_MNT/dev/console c 5 1
    mknod -m 666 $BANDIT_HOST_TGT_MNT/dev/null c 1 3
    if [ -h $BANDIT_HOST_TGT_MNT/dev/shm ]; then
        mkdir -pv $BANDIT_HOST_TGT_MNT/$(readlink $BANDIT_HOST_TGT_MNT/dev/shm)
    fi

    # libs
    case $BANDIT_TARGET_ARCH in
        i?86) 
            mkdir -pv $BANDIT_HOST_TGT_MNT/lib32
            mkdir -pv $BANDIT_HOST_TGT_MNT/usr/{,local}/lib32
            ln -sv lib32 $BANDIT_HOST_TGT_MNT/lib
            ln -sv lib32 $BANDIT_HOST_TGT_MNT/usr/lib
            ln -sv lib32 $BANDIT_HOST_TGT_MNT/usr/local/lib
            ;;
        x86_64) 
            mkdir -pv $BANDIT_HOST_TGT_MNT/lib32
            mkdir -pv $BANDIT_HOST_TGT_MNT/usr/{,local}/lib32
            mkdir -pv $BANDIT_HOST_TGT_MNT/lib64
            mkdir -pv $BANDIT_HOST_TGT_MNT/usr/{,local}/lib64
            ln -sv lib64 $BANDIT_HOST_TGT_MNT/lib
            ln -sv lib64 $BANDIT_HOST_TGT_MNT/usr/lib
            ln -sv lib64 $BANDIT_HOST_TGT_MNT/usr/local/lib
            ;;
    esac

    # usr
    mkdir -pv $BANDIT_HOST_TGT_MNT/usr/{,local/}{bin,include,sbin,src}
    mkdir -pv $BANDIT_HOST_TGT_MNT/usr/{,local/}share/{color,dict,doc,info,locale,man}
    mkdir -v  $BANDIT_HOST_TGT_MNT/usr/{,local/}share/{misc,terminfo,zoneinfo}
    mkdir -v  $BANDIT_HOST_TGT_MNT/usr/libexec
    mkdir -pv $BANDIT_HOST_TGT_MNT/usr/{,local/}share/man/man{1..8}

    # var
    mkdir -v $BANDIT_HOST_TGT_MNT/var/{log,mail,spool}
    ln -sv /run $BANDIT_HOST_TGT_MNT/var/run
    ln -sv /run/lock $BANDIT_HOST_TGT_MNT/var/lock
    mkdir -pv $BANDIT_HOST_TGT_MNT/var/{opt,cache,lib/{color,misc,locate},local}


    bandit_log "Create essential files and symlinks..."

    # bin
    ln -sv $BANDIT_BUILDER_DIR/bin/{bash,cat,echo,pwd,stty} $BANDIT_HOST_TGT_MNT/bin
    ln -sv $BANDIT_BUILDER_DIR/bin/file $BANDIT_HOST_TGT_MNT/usr/bin
    ln -sv $BANDIT_BUILDER_DIR/bin/perl $BANDIT_HOST_TGT_MNT/usr/bin
    ln -sv bash $BANDIT_HOST_TGT_MNT/bin/sh

    # etc
    ln -sv /proc/self/mounts $BANDIT_HOST_TGT_MNT/etc/mtab

    cat > $BANDIT_HOST_TGT_MNT/etc/passwd <<EOF
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/dev/null:/bin/false
nobody:x:99:99:Unprivileged User:/dev/null:/bin/false
EOF

    cat > $BANDIT_HOST_TGT_MNT/etc/group <<EOF
root:x:0:
bin:x:1:daemon
tty:x:5:
nogroup:x:99:
EOF

    # libs
    ln -sv $BANDIT_BUILDER_DIR/lib/libgcc_s.so{,.1} $BANDIT_HOST_TGT_MNT/usr/lib
    ln -sv $BANDIT_BUILDER_DIR/lib/libstdc++.so{,.6} $BANDIT_HOST_TGT_MNT/usr/lib
    sed "s#$BANDIT_BUILDER_DIR#usr#" $BANDIT_BUILDER_DIR/lib/libstdc++.la > $BANDIT_HOST_TGT_MNT/usr/lib/libstdc++.la

    # var/logs
    touch $BANDIT_HOST_TGT_MNT/var/log/{btmp,lastlog,faillog,wtmp}
    chgrp -v 13 $BANDIT_HOST_TGT_MNT/var/log/lastlog
    chmod -v 664  $BANDIT_HOST_TGT_MNT/var/log/lastlog
    chmod -v 600  $BANDIT_HOST_TGT_MNT/var/log/btmp

}
